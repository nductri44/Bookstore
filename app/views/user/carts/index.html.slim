.d-flex.main-bg-color
  .container.py-4.h-100
    .row.d-flex.justify-content-center.h-100
      .col-12
        - if flash[:danger].present?
          - flash[:danger].each do |message|
            div.alert.alert-danger
              = message
        .card.card-registration.card-registration-2.card-margin
          .card-body.p-0
            .row.g-0
              .col-lg-12
                .px-5.pt-4.pb-5
                  - if @cart.cart_items.empty?
                    .d-flex.justify-content-center.mb-2             
                      = image_tag("cart-empty.jpg", class: "img-cart-empty")
                    h4.text-center.text-danger.fw-bold Your cart is empty!
                    h6.text-center Must add items on the cart before you proceed to check out.
                    .d-flex.justify-content-center.pt-3
                      a[href=home_path role="button" class="btn btn-danger btn-lg text-white font-weight-bold btn-cart-empty" data-mdb-ripple-color="dark"]
                        | Go Shopping!
                  - else
                    .d-flex.justify-content-between.align-items-center.pb-3
                      h5.fw-bold.mb-0.text-black
                        | Shopping Cart
                    hr.mb-2.mt-2
                    .d-flex.justify-content-between.align-items-center.mb-0 
                      .col-4
                        h6.fw-bold.mb-0.text-muted.pl-2
                          | Product
                      .col-2.cart-title-2
                        h6.fw-bold.mb-0.text-muted
                          | Stock
                      .col-2.cart-title-3
                        h6.fw-bold.mb-0.text-muted
                          | Amount
                      .col-2.cart-title-4
                        h6.fw-bold.mb-0.text-muted
                          | Price
                      .col-1.text-end
                        h6.fw-bold.mb-0.text-muted
                          | Action
                    - @cart.cart_items.each do |item|
                      hr.mb-2.mt-2
                      .row.mb-2.d-flex.justify-content-between.align-items-center.cart-item-row
                        .col-md-1.col-lg-1.col-xl-1
                          a.non-decoration[href=user_product_path(item.product)]
                            - if item.product.image.attached?
                              = image_tag(item.product.image.variant(:show), :class => "img-fluid rounded-2 cart-img-height")
                            - else
                              = image_tag("book_default.jpg", :class => "img-fluid rounded-2 cart-img-height")
                        .col-md-4.col-lg-4.col-xl-4
                          a.non-decoration.mb-0.font-weight-600[href=user_product_path(item.product)]
                            = item.product.name
                        .col-md-1.col-lg-1.col-xl-1
                          h6.text-danger.mb-0.text-center
                            = item.product.stock
                        .col-md-3.col-lg-2.col-xl-2.d-flex.justify-content-end
                          button.button-subtract.btn.btn-link.px-2.mx-1
                            i.bi.bi-dash-lg
                          input.quantity-range.quantity-input.form-control.form-control-sm.text-center.cart-input[min="1" max="9999" name="quantity" value="#{item.quantity}" type="text" data-product-id="#{item.product.id}"]
                          button.button-add.btn.btn-link.px-2.mx-1
                            i.bi.bi-plus-lg
                        .col-md-2.col-lg-2.col-xl-2
                          h6.label-price.mb-0.text-muted.font-weight-400.px-3
                            = number_to_currency(item.product.price, unit: "", separator: "", delimiter: ".", precision: 0)
                            '  ₫
                        .col-md-1.col-lg-1.col-xl-1.text-end
                          a.text-muted[href=user_cart_path(item) data-method="delete"]
                            i.bi.bi-trash.icon-end-size
                    hr.mt-2.mb-4
                    .pt-3
                      h5.fw-bold.mb-5.mt-2.pt-1.text-danger.d-flex.justify-content-between
                        span Total Payment 
                        a#total-price.text-danger.fw-bold.text-decoration.number-last-row[data-price="#{@total_price}"]
                          = number_to_currency(@total_price, unit: '', separator: '', delimiter: '.', precision: 0)
                          '  ₫
                    .pt-1.margin-last-row
                    h6
                      a.text-body.text-muted.text-last-row[href=home_path]
                        i.bi.bi-arrow-left.me-2
                        | Back to shop
                      a[href=new_user_order_path(current_user) role="button" class="btn btn-danger btn-lg text-white font-weight-bold btn-cart-checkout" data-mdb-ripple-color="dark"]
                        | Checkout

javascript:
  document.querySelectorAll('.quantity-range').forEach(function(element) {
    element.addEventListener('input', function (e) {
      var input = e.target;
      var value = parseInt(input.value, 10);

      if (isNaN(value) || value < 1) {
        input.value = 1;
      }
    });

    element.addEventListener('keypress', function (e) {
      var ev = e || window.event;

      if (ev.charCode < 48 || ev.charCode > 57) {
        e.preventDefault();
      }
    });
  });
